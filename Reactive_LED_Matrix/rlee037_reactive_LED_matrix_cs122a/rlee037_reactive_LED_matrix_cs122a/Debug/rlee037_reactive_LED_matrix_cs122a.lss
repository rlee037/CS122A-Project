
rlee037_reactive_LED_matrix_cs122a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000362  000003f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000362  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  00800104  00800104  000003fa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000042c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  0000046c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000df5  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000969  00000000  00000000  00001331  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000076c  00000000  00000000  00001c9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00002408  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b6  00000000  00000000  00002608  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000053d  00000000  00000000  00002cbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000031fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	8b c0       	rjmp	.+278    	; 0x14c <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e6       	ldi	r30, 0x62	; 98
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a7 32       	cpi	r26, 0x27	; 39
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	1c d1       	rcall	.+568    	; 0x2fc <main>
  c4:	4c c1       	rjmp	.+664    	; 0x35e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerISR>:
            output_y = 0x00;
            break;
    }
    
    return state;
}
  c8:	ef 92       	push	r14
  ca:	ff 92       	push	r15
  cc:	0f 93       	push	r16
  ce:	1f 93       	push	r17
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	ca e0       	ldi	r28, 0x0A	; 10
  d6:	d1 e0       	ldi	r29, 0x01	; 1
  d8:	0f 2e       	mov	r0, r31
  da:	f2 e2       	ldi	r31, 0x22	; 34
  dc:	ef 2e       	mov	r14, r31
  de:	f1 e0       	ldi	r31, 0x01	; 1
  e0:	ff 2e       	mov	r15, r31
  e2:	f0 2d       	mov	r31, r0
  e4:	8e 01       	movw	r16, r28
  e6:	89 85       	ldd	r24, Y+9	; 0x09
  e8:	88 23       	and	r24, r24
  ea:	c9 f0       	breq	.+50     	; 0x11e <TimerISR+0x56>
  ec:	4d 81       	ldd	r20, Y+5	; 0x05
  ee:	5e 81       	ldd	r21, Y+6	; 0x06
  f0:	6f 81       	ldd	r22, Y+7	; 0x07
  f2:	78 85       	ldd	r23, Y+8	; 0x08
  f4:	89 81       	ldd	r24, Y+1	; 0x01
  f6:	9a 81       	ldd	r25, Y+2	; 0x02
  f8:	ab 81       	ldd	r26, Y+3	; 0x03
  fa:	bc 81       	ldd	r27, Y+4	; 0x04
  fc:	48 17       	cp	r20, r24
  fe:	59 07       	cpc	r21, r25
 100:	6a 07       	cpc	r22, r26
 102:	7b 07       	cpc	r23, r27
 104:	60 f0       	brcs	.+24     	; 0x11e <TimerISR+0x56>
 106:	88 81       	ld	r24, Y
 108:	ea 85       	ldd	r30, Y+10	; 0x0a
 10a:	fb 85       	ldd	r31, Y+11	; 0x0b
 10c:	08 2e       	mov	r0, r24
 10e:	00 0c       	add	r0, r0
 110:	99 0b       	sbc	r25, r25
 112:	09 95       	icall
 114:	88 83       	st	Y, r24
 116:	1d 82       	std	Y+5, r1	; 0x05
 118:	1e 82       	std	Y+6, r1	; 0x06
 11a:	1f 82       	std	Y+7, r1	; 0x07
 11c:	18 86       	std	Y+8, r1	; 0x08
 11e:	f8 01       	movw	r30, r16
 120:	85 81       	ldd	r24, Z+5	; 0x05
 122:	96 81       	ldd	r25, Z+6	; 0x06
 124:	a7 81       	ldd	r26, Z+7	; 0x07
 126:	b0 85       	ldd	r27, Z+8	; 0x08
 128:	c2 96       	adiw	r24, 0x32	; 50
 12a:	a1 1d       	adc	r26, r1
 12c:	b1 1d       	adc	r27, r1
 12e:	85 83       	std	Z+5, r24	; 0x05
 130:	96 83       	std	Z+6, r25	; 0x06
 132:	a7 83       	std	Z+7, r26	; 0x07
 134:	b0 87       	std	Z+8, r27	; 0x08
 136:	2c 96       	adiw	r28, 0x0c	; 12
 138:	ce 15       	cp	r28, r14
 13a:	df 05       	cpc	r29, r15
 13c:	99 f6       	brne	.-90     	; 0xe4 <TimerISR+0x1c>
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	1f 91       	pop	r17
 144:	0f 91       	pop	r16
 146:	ff 90       	pop	r15
 148:	ef 90       	pop	r14
 14a:	08 95       	ret

0000014c <__vector_13>:
 14c:	1f 92       	push	r1
 14e:	0f 92       	push	r0
 150:	0f b6       	in	r0, 0x3f	; 63
 152:	0f 92       	push	r0
 154:	11 24       	eor	r1, r1
 156:	0b b6       	in	r0, 0x3b	; 59
 158:	0f 92       	push	r0
 15a:	2f 93       	push	r18
 15c:	3f 93       	push	r19
 15e:	4f 93       	push	r20
 160:	5f 93       	push	r21
 162:	6f 93       	push	r22
 164:	7f 93       	push	r23
 166:	8f 93       	push	r24
 168:	9f 93       	push	r25
 16a:	af 93       	push	r26
 16c:	bf 93       	push	r27
 16e:	ef 93       	push	r30
 170:	ff 93       	push	r31
 172:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 176:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 17a:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 17e:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	a1 09       	sbc	r26, r1
 186:	b1 09       	sbc	r27, r1
 188:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 18c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 190:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 194:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 198:	89 2b       	or	r24, r25
 19a:	8a 2b       	or	r24, r26
 19c:	8b 2b       	or	r24, r27
 19e:	89 f4       	brne	.+34     	; 0x1c2 <__vector_13+0x76>
 1a0:	93 df       	rcall	.-218    	; 0xc8 <TimerISR>
 1a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1aa:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1ae:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1b2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 1b6:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 1ba:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 1be:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
 1c2:	ff 91       	pop	r31
 1c4:	ef 91       	pop	r30
 1c6:	bf 91       	pop	r27
 1c8:	af 91       	pop	r26
 1ca:	9f 91       	pop	r25
 1cc:	8f 91       	pop	r24
 1ce:	7f 91       	pop	r23
 1d0:	6f 91       	pop	r22
 1d2:	5f 91       	pop	r21
 1d4:	4f 91       	pop	r20
 1d6:	3f 91       	pop	r19
 1d8:	2f 91       	pop	r18
 1da:	0f 90       	pop	r0
 1dc:	0b be       	out	0x3b, r0	; 59
 1de:	0f 90       	pop	r0
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	0f 90       	pop	r0
 1e4:	1f 90       	pop	r1
 1e6:	18 95       	reti

000001e8 <TimerSet>:
 1e8:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ec:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1f0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1f4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1f8:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <__data_end>
 1fc:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <__data_end+0x1>
 200:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
 204:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 208:	08 95       	ret

0000020a <initUSART>:
 20a:	81 30       	cpi	r24, 0x01	; 1
 20c:	81 f0       	breq	.+32     	; 0x22e <initUSART+0x24>
 20e:	e1 ec       	ldi	r30, 0xC1	; 193
 210:	f0 e0       	ldi	r31, 0x00	; 0
 212:	80 81       	ld	r24, Z
 214:	88 61       	ori	r24, 0x18	; 24
 216:	80 83       	st	Z, r24
 218:	e2 ec       	ldi	r30, 0xC2	; 194
 21a:	f0 e0       	ldi	r31, 0x00	; 0
 21c:	80 81       	ld	r24, Z
 21e:	86 60       	ori	r24, 0x06	; 6
 220:	80 83       	st	Z, r24
 222:	83 e3       	ldi	r24, 0x33	; 51
 224:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 228:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 22c:	08 95       	ret
 22e:	e9 ec       	ldi	r30, 0xC9	; 201
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	80 81       	ld	r24, Z
 234:	88 61       	ori	r24, 0x18	; 24
 236:	80 83       	st	Z, r24
 238:	ea ec       	ldi	r30, 0xCA	; 202
 23a:	f0 e0       	ldi	r31, 0x00	; 0
 23c:	80 81       	ld	r24, Z
 23e:	86 60       	ori	r24, 0x06	; 6
 240:	80 83       	st	Z, r24
 242:	83 e3       	ldi	r24, 0x33	; 51
 244:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 248:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 24c:	08 95       	ret

0000024e <USART_Receive>:
 24e:	81 30       	cpi	r24, 0x01	; 1
 250:	41 f0       	breq	.+16     	; 0x262 <USART_Receive+0x14>
 252:	e0 ec       	ldi	r30, 0xC0	; 192
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	88 23       	and	r24, r24
 25a:	ec f7       	brge	.-6      	; 0x256 <USART_Receive+0x8>
 25c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 260:	08 95       	ret
 262:	e8 ec       	ldi	r30, 0xC8	; 200
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	88 23       	and	r24, r24
 26a:	ec f7       	brge	.-6      	; 0x266 <USART_Receive+0x18>
 26c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 270:	08 95       	ret

00000272 <Tick_Sensor>:
 272:	00 97       	sbiw	r24, 0x00	; 0
 274:	19 f0       	breq	.+6      	; 0x27c <Tick_Sensor+0xa>
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	79 f0       	breq	.+30     	; 0x298 <Tick_Sensor+0x26>
 27a:	05 c0       	rjmp	.+10     	; 0x286 <Tick_Sensor+0x14>
 27c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <sensor_x>
 280:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <sensor_y>
 284:	09 c0       	rjmp	.+18     	; 0x298 <Tick_Sensor+0x26>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	c0 df       	rcall	.-128    	; 0x20a <initUSART>
 28a:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <sensor_x>
 28e:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <sensor_y>
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	08 95       	ret
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	d9 df       	rcall	.-78     	; 0x24e <USART_Receive>
 29c:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <sensor_x>
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	d5 df       	rcall	.-86     	; 0x24e <USART_Receive>
 2a4:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <sensor_y>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	08 95       	ret

000002ae <SPI_MasterInit>:
 2ae:	80 ea       	ldi	r24, 0xA0	; 160
 2b0:	84 b9       	out	0x04, r24	; 4
 2b2:	81 e5       	ldi	r24, 0x51	; 81
 2b4:	8c bd       	out	0x2c, r24	; 44
 2b6:	08 95       	ret

000002b8 <SPI_Transmit>:
 2b8:	8e bd       	out	0x2e, r24	; 46
 2ba:	0d b4       	in	r0, 0x2d	; 45
 2bc:	07 fe       	sbrs	r0, 7
 2be:	fd cf       	rjmp	.-6      	; 0x2ba <SPI_Transmit+0x2>
 2c0:	08 95       	ret

000002c2 <LEDMatrix8x8_init>:
 2c2:	f5 df       	rcall	.-22     	; 0x2ae <SPI_MasterInit>
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	87 b9       	out	0x07, r24	; 7
 2c8:	18 b8       	out	0x08, r1	; 8
 2ca:	8a b9       	out	0x0a, r24	; 10
 2cc:	1b b8       	out	0x0b, r1	; 11
 2ce:	08 95       	ret

000002d0 <LEDMatrix8x8_display>:
 2d0:	f3 df       	rcall	.-26     	; 0x2b8 <SPI_Transmit>
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	88 b9       	out	0x08, r24	; 8
 2d6:	8b b9       	out	0x0b, r24	; 11
 2d8:	08 95       	ret

000002da <Tick_LED8x8>:
 2da:	00 97       	sbiw	r24, 0x00	; 0
 2dc:	19 f0       	breq	.+6      	; 0x2e4 <Tick_LED8x8+0xa>
 2de:	01 97       	sbiw	r24, 0x01	; 1
 2e0:	39 f0       	breq	.+14     	; 0x2f0 <Tick_LED8x8+0x16>
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <Tick_LED8x8+0xe>
 2e4:	ee df       	rcall	.-36     	; 0x2c2 <LEDMatrix8x8_init>
 2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <Tick_LED8x8+0x16>
 2e8:	ec df       	rcall	.-40     	; 0x2c2 <LEDMatrix8x8_init>
 2ea:	80 e0       	ldi	r24, 0x00	; 0
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	08 95       	ret
 2f0:	6f ef       	ldi	r22, 0xFF	; 255
 2f2:	8f ef       	ldi	r24, 0xFF	; 255
 2f4:	ed df       	rcall	.-38     	; 0x2d0 <LEDMatrix8x8_display>
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	08 95       	ret

000002fc <main>:

#include "timer_functions.h"
#include "reactive_led_matrix_sm.h"

int main(void) {
    DDRA = 0x00; PORTA = 0xFF; //Initialize PORTA for input
 2fc:	11 b8       	out	0x01, r1	; 1
 2fe:	8f ef       	ldi	r24, 0xFF	; 255
 300:	82 b9       	out	0x02, r24	; 2
    DDRD = 0xFF; PORTD = 0x00; //Initialize PORTD for output
 302:	8a b9       	out	0x0a, r24	; 10
 304:	1b b8       	out	0x0b, r1	; 11
    DDRA = 0xFF; PORTA = 0x00;
 306:	81 b9       	out	0x01, r24	; 1
 308:	12 b8       	out	0x02, r1	; 2
    PORTD = 0xFF;
 30a:	8b b9       	out	0x0b, r24	; 11
    unsigned char i = 0;
    tasks[i].state       = INIT_SENSOR;
 30c:	ea e0       	ldi	r30, 0x0A	; 10
 30e:	f1 e0       	ldi	r31, 0x01	; 1
 310:	10 82       	st	Z, r1
    tasks[i].period      = SENSOR_PERIOD;
 312:	44 e6       	ldi	r20, 0x64	; 100
 314:	50 e0       	ldi	r21, 0x00	; 0
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	41 83       	std	Z+1, r20	; 0x01
 31c:	52 83       	std	Z+2, r21	; 0x02
 31e:	63 83       	std	Z+3, r22	; 0x03
 320:	74 83       	std	Z+4, r23	; 0x04
    tasks[i].elapsedTime = 0;
 322:	15 82       	std	Z+5, r1	; 0x05
 324:	16 82       	std	Z+6, r1	; 0x06
 326:	17 82       	std	Z+7, r1	; 0x07
 328:	10 86       	std	Z+8, r1	; 0x08
    tasks[i].active      = 0x01;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	81 87       	std	Z+9, r24	; 0x09
    tasks[i].TickFct     = &Tick_Sensor;
 32e:	29 e3       	ldi	r18, 0x39	; 57
 330:	31 e0       	ldi	r19, 0x01	; 1
 332:	33 87       	std	Z+11, r19	; 0x0b
 334:	22 87       	std	Z+10, r18	; 0x0a
    ++i;
    tasks[i].state       = INIT_LED8x8;
 336:	14 86       	std	Z+12, r1	; 0x0c
    tasks[i].period      = LED8x8_PERIOD;
 338:	45 87       	std	Z+13, r20	; 0x0d
 33a:	56 87       	std	Z+14, r21	; 0x0e
 33c:	67 87       	std	Z+15, r22	; 0x0f
 33e:	70 8b       	std	Z+16, r23	; 0x10
    tasks[i].elapsedTime = 0;
 340:	11 8a       	std	Z+17, r1	; 0x11
 342:	12 8a       	std	Z+18, r1	; 0x12
 344:	13 8a       	std	Z+19, r1	; 0x13
 346:	14 8a       	std	Z+20, r1	; 0x14
    tasks[i].active      = 0x01;
 348:	85 8b       	std	Z+21, r24	; 0x15
    tasks[i].TickFct     = &Tick_LED8x8;
 34a:	8d e6       	ldi	r24, 0x6D	; 109
 34c:	91 e0       	ldi	r25, 0x01	; 1
 34e:	97 8b       	std	Z+23, r25	; 0x17
 350:	86 8b       	std	Z+22, r24	; 0x16
    ++i;
    
    TimerSet(GLOBAL_PERIOD);
 352:	62 e3       	ldi	r22, 0x32	; 50
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	46 df       	rcall	.-372    	; 0x1e8 <TimerSet>
 35c:	ff cf       	rjmp	.-2      	; 0x35c <main+0x60>

0000035e <_exit>:
 35e:	f8 94       	cli

00000360 <__stop_program>:
 360:	ff cf       	rjmp	.-2      	; 0x360 <__stop_program>
