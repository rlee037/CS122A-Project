
rlee037_reactive_LED_matrix_cs122a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000039c  00000430  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000039c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000032  00800104  00800104  00000434  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000434  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e6b  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000981  00000000  00000000  000013e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000805  00000000  00000000  00001d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00002570  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e3  00000000  00000000  00002780  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005ee  00000000  00000000  00002e63  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00003451  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	f6 c0       	rjmp	.+492    	; 0x222 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e9       	ldi	r30, 0x9C	; 156
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 33       	cpi	r26, 0x36	; 54
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	2e d1       	rcall	.+604    	; 0x320 <main>
  c4:	69 c1       	rjmp	.+722    	; 0x398 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <Tick_Sensor>:
            break;
        default: //do nothing
            break;
    }
    
    switch (y) {
  c8:	00 97       	sbiw	r24, 0x00	; 0
  ca:	21 f0       	breq	.+8      	; 0xd4 <Tick_Sensor+0xc>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	91 05       	cpc	r25, r1
  d0:	71 f0       	breq	.+28     	; 0xee <Tick_Sensor+0x26>
  d2:	07 c0       	rjmp	.+14     	; 0xe2 <Tick_Sensor+0x1a>
  d4:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <sensor_x>
  d8:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <sensor_y>
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	08 95       	ret
  e2:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <sensor_x>
  e6:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <sensor_y>
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	08 95       	ret

000000f0 <Tick_Coordinate>:
  f0:	00 97       	sbiw	r24, 0x00	; 0
  f2:	19 f0       	breq	.+6      	; 0xfa <Tick_Coordinate+0xa>
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	79 f0       	breq	.+30     	; 0x116 <Tick_Coordinate+0x26>
  f8:	07 c0       	rjmp	.+14     	; 0x108 <Tick_Coordinate+0x18>
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <PUCK_x>
 100:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <PUCK_y>
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	0b c0       	rjmp	.+22     	; 0x11e <Tick_Coordinate+0x2e>
 108:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <output_x>
 10c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <output_y>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	08 95       	ret
 116:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 11a:	88 30       	cpi	r24, 0x08	; 8
 11c:	20 f4       	brcc	.+8      	; 0x126 <Tick_Coordinate+0x36>
 11e:	8f 5f       	subi	r24, 0xFF	; 255
 120:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 124:	02 c0       	rjmp	.+4      	; 0x12a <Tick_Coordinate+0x3a>
 126:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <__data_end>
 12a:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <__data_end>
 12e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <PUCK_x>
 132:	09 2e       	mov	r0, r25
 134:	01 c0       	rjmp	.+2      	; 0x138 <Tick_Coordinate+0x48>
 136:	88 0f       	add	r24, r24
 138:	0a 94       	dec	r0
 13a:	ea f7       	brpl	.-6      	; 0x136 <Tick_Coordinate+0x46>
 13c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <output_x>
 140:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <PUCK_y>
 144:	01 c0       	rjmp	.+2      	; 0x148 <Tick_Coordinate+0x58>
 146:	88 0f       	add	r24, r24
 148:	9a 95       	dec	r25
 14a:	ea f7       	brpl	.-6      	; 0x146 <Tick_Coordinate+0x56>
 14c:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <output_y>
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	08 95       	ret

00000156 <TimerOn>:
 156:	8b e0       	ldi	r24, 0x0B	; 11
 158:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 15c:	8d e7       	ldi	r24, 0x7D	; 125
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 164:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 168:	82 e0       	ldi	r24, 0x02	; 2
 16a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 16e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 172:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 176:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 17a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 17e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 182:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 186:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 18a:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 18e:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 192:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
 196:	8f b7       	in	r24, 0x3f	; 63
 198:	80 68       	ori	r24, 0x80	; 128
 19a:	8f bf       	out	0x3f, r24	; 63
 19c:	08 95       	ret

0000019e <TimerISR>:
 19e:	ef 92       	push	r14
 1a0:	ff 92       	push	r15
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	cc e0       	ldi	r28, 0x0C	; 12
 1ac:	d1 e0       	ldi	r29, 0x01	; 1
 1ae:	0f 2e       	mov	r0, r31
 1b0:	f0 e3       	ldi	r31, 0x30	; 48
 1b2:	ef 2e       	mov	r14, r31
 1b4:	f1 e0       	ldi	r31, 0x01	; 1
 1b6:	ff 2e       	mov	r15, r31
 1b8:	f0 2d       	mov	r31, r0
 1ba:	8e 01       	movw	r16, r28
 1bc:	89 85       	ldd	r24, Y+9	; 0x09
 1be:	88 23       	and	r24, r24
 1c0:	c9 f0       	breq	.+50     	; 0x1f4 <TimerISR+0x56>
 1c2:	4d 81       	ldd	r20, Y+5	; 0x05
 1c4:	5e 81       	ldd	r21, Y+6	; 0x06
 1c6:	6f 81       	ldd	r22, Y+7	; 0x07
 1c8:	78 85       	ldd	r23, Y+8	; 0x08
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	9a 81       	ldd	r25, Y+2	; 0x02
 1ce:	ab 81       	ldd	r26, Y+3	; 0x03
 1d0:	bc 81       	ldd	r27, Y+4	; 0x04
 1d2:	48 17       	cp	r20, r24
 1d4:	59 07       	cpc	r21, r25
 1d6:	6a 07       	cpc	r22, r26
 1d8:	7b 07       	cpc	r23, r27
 1da:	60 f0       	brcs	.+24     	; 0x1f4 <TimerISR+0x56>
 1dc:	88 81       	ld	r24, Y
 1de:	ea 85       	ldd	r30, Y+10	; 0x0a
 1e0:	fb 85       	ldd	r31, Y+11	; 0x0b
 1e2:	08 2e       	mov	r0, r24
 1e4:	00 0c       	add	r0, r0
 1e6:	99 0b       	sbc	r25, r25
 1e8:	09 95       	icall
 1ea:	88 83       	st	Y, r24
 1ec:	1d 82       	std	Y+5, r1	; 0x05
 1ee:	1e 82       	std	Y+6, r1	; 0x06
 1f0:	1f 82       	std	Y+7, r1	; 0x07
 1f2:	18 86       	std	Y+8, r1	; 0x08
 1f4:	f8 01       	movw	r30, r16
 1f6:	85 81       	ldd	r24, Z+5	; 0x05
 1f8:	96 81       	ldd	r25, Z+6	; 0x06
 1fa:	a7 81       	ldd	r26, Z+7	; 0x07
 1fc:	b0 85       	ldd	r27, Z+8	; 0x08
 1fe:	c2 96       	adiw	r24, 0x32	; 50
 200:	a1 1d       	adc	r26, r1
 202:	b1 1d       	adc	r27, r1
 204:	85 83       	std	Z+5, r24	; 0x05
 206:	96 83       	std	Z+6, r25	; 0x06
 208:	a7 83       	std	Z+7, r26	; 0x07
 20a:	b0 87       	std	Z+8, r27	; 0x08
 20c:	2c 96       	adiw	r28, 0x0c	; 12
 20e:	ce 15       	cp	r28, r14
 210:	df 05       	cpc	r29, r15
 212:	99 f6       	brne	.-90     	; 0x1ba <TimerISR+0x1c>
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	1f 91       	pop	r17
 21a:	0f 91       	pop	r16
 21c:	ff 90       	pop	r15
 21e:	ef 90       	pop	r14
 220:	08 95       	ret

00000222 <__vector_13>:
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	0b b6       	in	r0, 0x3b	; 59
 22e:	0f 92       	push	r0
 230:	2f 93       	push	r18
 232:	3f 93       	push	r19
 234:	4f 93       	push	r20
 236:	5f 93       	push	r21
 238:	6f 93       	push	r22
 23a:	7f 93       	push	r23
 23c:	8f 93       	push	r24
 23e:	9f 93       	push	r25
 240:	af 93       	push	r26
 242:	bf 93       	push	r27
 244:	ef 93       	push	r30
 246:	ff 93       	push	r31
 248:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <_avr_timer_cntcurr>
 24c:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <_avr_timer_cntcurr+0x1>
 250:	a0 91 07 01 	lds	r26, 0x0107	; 0x800107 <_avr_timer_cntcurr+0x2>
 254:	b0 91 08 01 	lds	r27, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x3>
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	a1 09       	sbc	r26, r1
 25c:	b1 09       	sbc	r27, r1
 25e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 262:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 266:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 26a:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
 26e:	89 2b       	or	r24, r25
 270:	8a 2b       	or	r24, r26
 272:	8b 2b       	or	r24, r27
 274:	89 f4       	brne	.+34     	; 0x298 <__vector_13+0x76>
 276:	93 df       	rcall	.-218    	; 0x19e <TimerISR>
 278:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 27c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 280:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 284:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 288:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_avr_timer_cntcurr>
 28c:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <_avr_timer_cntcurr+0x1>
 290:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <_avr_timer_cntcurr+0x2>
 294:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <_avr_timer_cntcurr+0x3>
 298:	ff 91       	pop	r31
 29a:	ef 91       	pop	r30
 29c:	bf 91       	pop	r27
 29e:	af 91       	pop	r26
 2a0:	9f 91       	pop	r25
 2a2:	8f 91       	pop	r24
 2a4:	7f 91       	pop	r23
 2a6:	6f 91       	pop	r22
 2a8:	5f 91       	pop	r21
 2aa:	4f 91       	pop	r20
 2ac:	3f 91       	pop	r19
 2ae:	2f 91       	pop	r18
 2b0:	0f 90       	pop	r0
 2b2:	0b be       	out	0x3b, r0	; 59
 2b4:	0f 90       	pop	r0
 2b6:	0f be       	out	0x3f, r0	; 63
 2b8:	0f 90       	pop	r0
 2ba:	1f 90       	pop	r1
 2bc:	18 95       	reti

000002be <TimerSet>:
 2be:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 2c2:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2c6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2ca:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2ce:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <_avr_timer_cntcurr>
 2d2:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <_avr_timer_cntcurr+0x1>
 2d6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr+0x2>
 2da:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x3>
 2de:	08 95       	ret

000002e0 <LEDMatrix8x8_init>:
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	87 b9       	out	0x07, r24	; 7
 2e4:	18 b8       	out	0x08, r1	; 8
 2e6:	8a b9       	out	0x0a, r24	; 10
 2e8:	1b b8       	out	0x0b, r1	; 11
 2ea:	08 95       	ret

000002ec <ShiftReg_init>:
 2ec:	84 b1       	in	r24, 0x04	; 4
 2ee:	82 6b       	ori	r24, 0xB2	; 178
 2f0:	84 b9       	out	0x04, r24	; 4
 2f2:	08 95       	ret

000002f4 <Tick_LED8x8>:
 2f4:	00 97       	sbiw	r24, 0x00	; 0
 2f6:	19 f0       	breq	.+6      	; 0x2fe <Tick_LED8x8+0xa>
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	41 f0       	breq	.+16     	; 0x30c <Tick_LED8x8+0x18>
 2fc:	03 c0       	rjmp	.+6      	; 0x304 <Tick_LED8x8+0x10>
 2fe:	f0 df       	rcall	.-32     	; 0x2e0 <LEDMatrix8x8_init>
 300:	f5 df       	rcall	.-22     	; 0x2ec <ShiftReg_init>
 302:	04 c0       	rjmp	.+8      	; 0x30c <Tick_LED8x8+0x18>
 304:	ed df       	rcall	.-38     	; 0x2e0 <LEDMatrix8x8_init>
 306:	80 e0       	ldi	r24, 0x00	; 0
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	08 95       	ret
 30c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <output_y>
 310:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <output_x>
 314:	98 b9       	out	0x08, r25	; 8
 316:	80 95       	com	r24
 318:	8b b9       	out	0x0b, r24	; 11
 31a:	81 e0       	ldi	r24, 0x01	; 1
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	08 95       	ret

00000320 <main>:
#include "io.h"

int main(void) {
    
    unsigned char i = 0;
    tasks[i].state       = INIT_SENSOR;
 320:	ec e0       	ldi	r30, 0x0C	; 12
 322:	f1 e0       	ldi	r31, 0x01	; 1
 324:	10 82       	st	Z, r1
    tasks[i].period      = SENSOR_PERIOD;
 326:	44 e6       	ldi	r20, 0x64	; 100
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	60 e0       	ldi	r22, 0x00	; 0
 32c:	70 e0       	ldi	r23, 0x00	; 0
 32e:	41 83       	std	Z+1, r20	; 0x01
 330:	52 83       	std	Z+2, r21	; 0x02
 332:	63 83       	std	Z+3, r22	; 0x03
 334:	74 83       	std	Z+4, r23	; 0x04
    tasks[i].elapsedTime = 0;
 336:	15 82       	std	Z+5, r1	; 0x05
 338:	16 82       	std	Z+6, r1	; 0x06
 33a:	17 82       	std	Z+7, r1	; 0x07
 33c:	10 86       	std	Z+8, r1	; 0x08
    tasks[i].active      = 0x01;
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	81 87       	std	Z+9, r24	; 0x09
    tasks[i].TickFct     = &Tick_Sensor;
 342:	24 e6       	ldi	r18, 0x64	; 100
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	33 87       	std	Z+11, r19	; 0x0b
 348:	22 87       	std	Z+10, r18	; 0x0a
    ++i;
    tasks[i].state       = INIT_COORDINATE;
 34a:	14 86       	std	Z+12, r1	; 0x0c
    tasks[i].period      = COORDINATE_PERIOD;
 34c:	08 ec       	ldi	r16, 0xC8	; 200
 34e:	10 e0       	ldi	r17, 0x00	; 0
 350:	20 e0       	ldi	r18, 0x00	; 0
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	05 87       	std	Z+13, r16	; 0x0d
 356:	16 87       	std	Z+14, r17	; 0x0e
 358:	27 87       	std	Z+15, r18	; 0x0f
 35a:	30 8b       	std	Z+16, r19	; 0x10
    tasks[i].elapsedTime = 0;
 35c:	11 8a       	std	Z+17, r1	; 0x11
 35e:	12 8a       	std	Z+18, r1	; 0x12
 360:	13 8a       	std	Z+19, r1	; 0x13
 362:	14 8a       	std	Z+20, r1	; 0x14
    tasks[i].active      = 0x01;
 364:	85 8b       	std	Z+21, r24	; 0x15
    tasks[i].TickFct     = &Tick_Coordinate;
 366:	28 e7       	ldi	r18, 0x78	; 120
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	37 8b       	std	Z+23, r19	; 0x17
 36c:	26 8b       	std	Z+22, r18	; 0x16
    ++i;
    tasks[i].state       = INIT_LED8x8;
 36e:	10 8e       	std	Z+24, r1	; 0x18
    tasks[i].period      = LED8x8_PERIOD;
 370:	41 8f       	std	Z+25, r20	; 0x19
 372:	52 8f       	std	Z+26, r21	; 0x1a
 374:	63 8f       	std	Z+27, r22	; 0x1b
 376:	74 8f       	std	Z+28, r23	; 0x1c
    tasks[i].elapsedTime = 0;
 378:	15 8e       	std	Z+29, r1	; 0x1d
 37a:	16 8e       	std	Z+30, r1	; 0x1e
 37c:	17 8e       	std	Z+31, r1	; 0x1f
 37e:	10 a2       	std	Z+32, r1	; 0x20
    tasks[i].active      = 0x01;
 380:	81 a3       	std	Z+33, r24	; 0x21
    tasks[i].TickFct     = &Tick_LED8x8;
 382:	8a e7       	ldi	r24, 0x7A	; 122
 384:	91 e0       	ldi	r25, 0x01	; 1
 386:	93 a3       	std	Z+35, r25	; 0x23
 388:	82 a3       	std	Z+34, r24	; 0x22
    ++i;
    
    TimerSet(GLOBAL_PERIOD);
 38a:	62 e3       	ldi	r22, 0x32	; 50
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	80 e0       	ldi	r24, 0x00	; 0
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	95 df       	rcall	.-214    	; 0x2be <TimerSet>
    TimerOn();
 394:	e0 de       	rcall	.-576    	; 0x156 <TimerOn>
 396:	ff cf       	rjmp	.-2      	; 0x396 <main+0x76>

00000398 <_exit>:
 398:	f8 94       	cli

0000039a <__stop_program>:
 39a:	ff cf       	rjmp	.-2      	; 0x39a <__stop_program>
